name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  CI: 1

jobs:
  msrv-check:
    name: MSRV check of ${{ matrix.package }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        package: [ "gratte", "gratte_macros" ]
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
        include:
          - toolchain: 1.66.1
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly and ${{ matrix.toolchain }}
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly,${{ matrix.toolchain }}
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v9-rust
          key: package-${{ matrix.package }}-msrv-pins-files-${{ hashFiles('**/msrv-pins.toml') }}
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@84c20235bedc3797c7e1ddf685c574a4a6c666da # v2.52.2
        with:
          tool: just@1.40.0,cargo-hack@0.6.36,cargo-minimal-versions@0.1.30,cargo-msrv-prep@2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks using cargo-minimal-versions
        run: just toolchain=${{ matrix.toolchain }} package=${{ matrix.package }} check-minimal

  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, macos-14, windows-2022 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: stable
          cache: false

      - name: Rust Cache
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8
        with:
          prefix-key: v4-rust
          cache-on-failure: true

      - name: Install required tools
        uses: taiki-e/install-action@84c20235bedc3797c7e1ddf685c574a4a6c666da # v2.52.2
        with:
          tool: just@1.40.0,cargo-hack@0.6.36
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run checks on feature powerset
        run: just check-powerset

      - name: Run tests
        run: just test

  doc:
    name: Rustdoc check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install Rust nightly
        uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9 # v1.12.0
        with:
          toolchain: nightly
          cache: false

      - name: Install just
        uses: taiki-e/install-action@84c20235bedc3797c7e1ddf685c574a4a6c666da # v2.52.2
        with:
          tool: just@1.40.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate doc using rustdoc
        run: just doc
